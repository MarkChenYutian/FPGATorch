--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=9 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 16.1 cbx_cycloneii 2017:01:11:18:30:33:SJ cbx_lpm_add_sub 2017:01:11:18:30:33:SJ cbx_lpm_compare 2017:01:11:18:30:33:SJ cbx_lpm_decode 2017:01:11:18:30:33:SJ cbx_mgl 2017:01:11:19:37:47:SJ cbx_nadder 2017:01:11:18:30:33:SJ cbx_stratix 2017:01:11:18:30:33:SJ cbx_stratixii 2017:01:11:18:30:33:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Intel and sold by Intel or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_fla
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[8..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[8..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode18791w[1..0]	: WIRE;
	w_anode18800w[3..0]	: WIRE;
	w_anode18817w[3..0]	: WIRE;
	w_anode18827w[3..0]	: WIRE;
	w_anode18837w[3..0]	: WIRE;
	w_anode18847w[3..0]	: WIRE;
	w_anode18857w[3..0]	: WIRE;
	w_anode18867w[3..0]	: WIRE;
	w_anode18877w[3..0]	: WIRE;
	w_anode18889w[1..0]	: WIRE;
	w_anode18896w[3..0]	: WIRE;
	w_anode18907w[3..0]	: WIRE;
	w_anode18917w[3..0]	: WIRE;
	w_anode18927w[3..0]	: WIRE;
	w_anode18937w[3..0]	: WIRE;
	w_anode18947w[3..0]	: WIRE;
	w_anode18957w[3..0]	: WIRE;
	w_anode18967w[3..0]	: WIRE;
	w_data18789w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[8..0] = eq_wire[8..0];
	eq_wire[] = ( ( w_anode18967w[3..3], w_anode18957w[3..3], w_anode18947w[3..3], w_anode18937w[3..3], w_anode18927w[3..3], w_anode18917w[3..3], w_anode18907w[3..3], w_anode18896w[3..3]), ( w_anode18877w[3..3], w_anode18867w[3..3], w_anode18857w[3..3], w_anode18847w[3..3], w_anode18837w[3..3], w_anode18827w[3..3], w_anode18817w[3..3], w_anode18800w[3..3]));
	w_anode18791w[] = ( (w_anode18791w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode18800w[] = ( (w_anode18800w[2..2] & (! w_data18789w[2..2])), (w_anode18800w[1..1] & (! w_data18789w[1..1])), (w_anode18800w[0..0] & (! w_data18789w[0..0])), w_anode18791w[1..1]);
	w_anode18817w[] = ( (w_anode18817w[2..2] & (! w_data18789w[2..2])), (w_anode18817w[1..1] & (! w_data18789w[1..1])), (w_anode18817w[0..0] & w_data18789w[0..0]), w_anode18791w[1..1]);
	w_anode18827w[] = ( (w_anode18827w[2..2] & (! w_data18789w[2..2])), (w_anode18827w[1..1] & w_data18789w[1..1]), (w_anode18827w[0..0] & (! w_data18789w[0..0])), w_anode18791w[1..1]);
	w_anode18837w[] = ( (w_anode18837w[2..2] & (! w_data18789w[2..2])), (w_anode18837w[1..1] & w_data18789w[1..1]), (w_anode18837w[0..0] & w_data18789w[0..0]), w_anode18791w[1..1]);
	w_anode18847w[] = ( (w_anode18847w[2..2] & w_data18789w[2..2]), (w_anode18847w[1..1] & (! w_data18789w[1..1])), (w_anode18847w[0..0] & (! w_data18789w[0..0])), w_anode18791w[1..1]);
	w_anode18857w[] = ( (w_anode18857w[2..2] & w_data18789w[2..2]), (w_anode18857w[1..1] & (! w_data18789w[1..1])), (w_anode18857w[0..0] & w_data18789w[0..0]), w_anode18791w[1..1]);
	w_anode18867w[] = ( (w_anode18867w[2..2] & w_data18789w[2..2]), (w_anode18867w[1..1] & w_data18789w[1..1]), (w_anode18867w[0..0] & (! w_data18789w[0..0])), w_anode18791w[1..1]);
	w_anode18877w[] = ( (w_anode18877w[2..2] & w_data18789w[2..2]), (w_anode18877w[1..1] & w_data18789w[1..1]), (w_anode18877w[0..0] & w_data18789w[0..0]), w_anode18791w[1..1]);
	w_anode18889w[] = ( (w_anode18889w[0..0] & data_wire[3..3]), enable_wire);
	w_anode18896w[] = ( (w_anode18896w[2..2] & (! w_data18789w[2..2])), (w_anode18896w[1..1] & (! w_data18789w[1..1])), (w_anode18896w[0..0] & (! w_data18789w[0..0])), w_anode18889w[1..1]);
	w_anode18907w[] = ( (w_anode18907w[2..2] & (! w_data18789w[2..2])), (w_anode18907w[1..1] & (! w_data18789w[1..1])), (w_anode18907w[0..0] & w_data18789w[0..0]), w_anode18889w[1..1]);
	w_anode18917w[] = ( (w_anode18917w[2..2] & (! w_data18789w[2..2])), (w_anode18917w[1..1] & w_data18789w[1..1]), (w_anode18917w[0..0] & (! w_data18789w[0..0])), w_anode18889w[1..1]);
	w_anode18927w[] = ( (w_anode18927w[2..2] & (! w_data18789w[2..2])), (w_anode18927w[1..1] & w_data18789w[1..1]), (w_anode18927w[0..0] & w_data18789w[0..0]), w_anode18889w[1..1]);
	w_anode18937w[] = ( (w_anode18937w[2..2] & w_data18789w[2..2]), (w_anode18937w[1..1] & (! w_data18789w[1..1])), (w_anode18937w[0..0] & (! w_data18789w[0..0])), w_anode18889w[1..1]);
	w_anode18947w[] = ( (w_anode18947w[2..2] & w_data18789w[2..2]), (w_anode18947w[1..1] & (! w_data18789w[1..1])), (w_anode18947w[0..0] & w_data18789w[0..0]), w_anode18889w[1..1]);
	w_anode18957w[] = ( (w_anode18957w[2..2] & w_data18789w[2..2]), (w_anode18957w[1..1] & w_data18789w[1..1]), (w_anode18957w[0..0] & (! w_data18789w[0..0])), w_anode18889w[1..1]);
	w_anode18967w[] = ( (w_anode18967w[2..2] & w_data18789w[2..2]), (w_anode18967w[1..1] & w_data18789w[1..1]), (w_anode18967w[0..0] & w_data18789w[0..0]), w_anode18889w[1..1]);
	w_data18789w[2..0] = data_wire[2..0];
END;
--VALID FILE
